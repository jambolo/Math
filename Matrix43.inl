/** @file *//********************************************************************************************************

                                                    Matrix43.inl

						                    Copyright 2003, John J. Bolton
	--------------------------------------------------------------------------------------------------------------

	$Header: //depot/Libraries/Math/Matrix43.inl#10 $

	$NoKeywords: $

 ********************************************************************************************************************/

#pragma once


#include "Matrix43.h"

#include "Vector3.h"


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Matrix43::Matrix43( float Xx, float Xy, float Xz,
						   float Yx, float Yy, float Yz,
						   float Zx, float Zy, float Zz,
						   float Tx, float Ty, float Tz )

	: m_Xx( Xx ), m_Xy( Xy ), m_Xz( Xz ),
	  m_Yx( Yx ), m_Yy( Yy ), m_Yz( Yz ),
	  m_Zx( Zx ), m_Zy( Zy ), m_Zz( Zz ),
	  m_Tx( Tx ), m_Ty( Ty ), m_Tz( Tz )
{
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Matrix43::Matrix43( Vector3 const & x,
						   Vector3 const & y,
						   Vector3 const & z,
						   Vector3 const & t/* = Vector3::Origin()*/ )
	: m_Xx( x.m_X ), m_Xy( x.m_Y ), m_Xz( x.m_Z ),
	  m_Yx( y.m_X ), m_Yy( y.m_Y ), m_Yz( y.m_Z ),
	  m_Zx( z.m_X ), m_Zy( z.m_Y ), m_Zz( z.m_Z ),
	  m_Tx( t.m_X ), m_Ty( t.m_Y ), m_Tz( t.m_Z )
{
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector3 const &	Matrix43::GetX() const
{
	return *reinterpret_cast< Vector3 const * >( &m_Xx );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector3 const &	Matrix43::GetY() const
{
	return *reinterpret_cast< Vector3 const * >( &m_Yx );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector3 const &	Matrix43::GetZ() const
{
	return *reinterpret_cast< Vector3 const * >( &m_Zx );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector3 const &	Matrix43::GetT() const
{
	return *reinterpret_cast< Vector3 const * >( &m_Tx );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Matrix43 & Matrix43::operator *=( Matrix43 const & b )
{
	return PostConcatenate( b );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline 	Matrix43 Matrix43::operator ~() const
{
	return Matrix43( *this ).Invert();
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Matrix43 Matrix43::Identity()
{
	return Matrix43( 1.0f, 0.0f, 0.0f,
					 0.0f, 1.0f, 0.0f,
					 0.0f, 0.0f, 1.0f,
					 0.0f, 0.0f, 0.0f );
}
