/** @file *//********************************************************************************************************

                                                     Vector2i.inl

						                    Copyright 2003, John J. Bolton
	--------------------------------------------------------------------------------------------------------------

	$Header: //depot/Libraries/Math/Vector2i.inl#2 $

	$NoKeywords: $

 ********************************************************************************************************************/

#pragma once

#include "Vector2i.h"

#include <cassert>
#include <cmath>


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i::Vector2i( int x, int y )
	: m_X( x ), m_Y( y )
{
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i::Vector2i( int const v[ 2 ] )
	: m_X( v[ 0 ] ), m_Y( v[ 1 ] )
{
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i const & Vector2i::Negate()
{
	m_X = -m_X;
	m_Y = -m_Y;

	return *this;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i const & Vector2i::Add( Vector2i const & b )
{
	m_X += b.m_X;
	m_Y += b.m_Y;

	return *this;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i const & Vector2i::Subtract( Vector2i const & b )
{
	m_X -= b.m_X;
	m_Y -= b.m_Y;

	return *this;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i const & Vector2i::Scale( int scale )
{
	m_X *= scale;
	m_Y *= scale;

	return *this;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i const & Vector2i::operator +=( Vector2i const & b )
{
	return Add( b );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i const & Vector2i::operator -=( Vector2i const & b )
{
	return Subtract( b );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i const & Vector2i::operator *=( int scale )
{
	return Scale( scale );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i Vector2i::operator -() const
{
	return Vector2i( *this ).Negate();
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i Vector2i::Origin()
{
	return Vector2i( 0, 0 );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i Vector2i::XAxis()
{
	return Vector2i( 1, 0 );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i Vector2i::YAxis()
{
	return Vector2i( 0, 1 );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i operator +( Vector2i const & a, Vector2i const & b )
{
	return Vector2i( a ).Add( b );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector2i operator -( Vector2i const & a, Vector2i const & b )
{
	return Vector2i( a ).Subtract( b );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

//! @note	When multiplying a vector and a scalar, the operator is commutative since the order of the operands is
//!			only notational.

inline Vector2i operator *( Vector2i const & v, int s )
{
	return Vector2i( v ).Scale( s );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

//! @note	When multiplying a vector and a scalar, the operator is commutative since the order of the operands is
//!			only notational.

inline Vector2i operator *( int s, Vector2i const & v )
{
	return Vector2i( v ).Scale( s );
}
