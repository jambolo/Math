/** @file *//********************************************************************************************************

                                                     Matrix43d.inl

						                    Copyright 2003, John J. Bolton
	--------------------------------------------------------------------------------------------------------------

	$Header: //depot/Libraries/Math/Matrix43d.inl#6 $

	$NoKeywords: $

 ********************************************************************************************************************/

#pragma once


#include "Matrix43d.h"

#include "Vector3d.h"


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Matrix43d::Matrix43d( double Xx, double Xy, double Xz,
							 double Yx, double Yy, double Yz,
							 double Zx, double Zy, double Zz,
							 double Tx, double Ty, double Tz )

	: m_Xx( Xx ), m_Xy( Xy ), m_Xz( Xz ),
	  m_Yx( Yx ), m_Yy( Yy ), m_Yz( Yz ),
	  m_Zx( Zx ), m_Zy( Zy ), m_Zz( Zz ),
	  m_Tx( Tx ), m_Ty( Ty ), m_Tz( Tz )
{
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Matrix43d::Matrix43d( Vector3d const & x,
							 Vector3d const & y,
							 Vector3d const & z,
							 Vector3d const & t/* = Vector3d::Origin()*/ )
	: m_Xx( x.m_X ), m_Xy( x.m_Y ), m_Xz( x.m_Z ),
	  m_Yx( y.m_X ), m_Yy( y.m_Y ), m_Yz( y.m_Z ),
	  m_Zx( z.m_X ), m_Zy( z.m_Y ), m_Zz( z.m_Z ),
	  m_Tx( t.m_X ), m_Ty( t.m_Y ), m_Tz( t.m_Z )
{
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector3d const &	Matrix43d::GetX() const
{
	return *reinterpret_cast< Vector3d const * >( &m_Xx );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector3d const &	Matrix43d::GetY() const
{
	return *reinterpret_cast< Vector3d const * >( &m_Yx );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector3d const &	Matrix43d::GetZ() const
{
	return *reinterpret_cast< Vector3d const * >( &m_Zx );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Vector3d const &	Matrix43d::GetT() const
{
	return *reinterpret_cast< Vector3d const * >( &m_Tx );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Matrix43d & Matrix43d::operator *=( Matrix43d const & b )
{
	return PostConcatenate( b );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline 	Matrix43d Matrix43d::operator ~() const
{
	return Matrix43d( *this ).Invert();
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Matrix43d Matrix43d::Identity()
{
	return Matrix43d( 1.0, 0.0, 0.0,
					  0.0, 1.0, 0.0,
					  0.0, 0.0, 1.0,
					  0.0, 0.0, 0.0 );
}
